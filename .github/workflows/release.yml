name: Release SDK

on:
  workflow_dispatch:

jobs:
  publish-native:
    name: Build & Deploy - ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux-x86_64
            runner: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            native-filename: libjot_sr25519.so
          - platform: macos-x86_64
            runner: macos-latest
            rust-target: x86_64-apple-darwin
            native-filename: libjot_sr25519.dylib
          - platform: macos-aarch64
            runner: macos-latest
            rust-target: aarch64-apple-darwin
            native-filename: libjot_sr25519.dylib
          - platform: windows-x86_64
            runner: windows-latest
            rust-target: x86_64-pc-windows-msvc
            native-filename: jot_sr25519.dll

    env:
      MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev gcc-aarch64-linux-gnu

      - name: Build native library
        run: |
          cargo build --release --target ${{ matrix.rust-target }} --manifest-path jot/src/jot_sr25519/Cargo.toml

      - name: Upload native lib
        uses: actions/upload-artifact@v4
        with:
          name: native-lib-${{ matrix.platform }}
          path: target/${{ matrix.rust-target }}/release/${{ matrix.native-filename }}

      - name: Deploy platform-specific native JAR
        run: |
          mvn clean deploy \
            -pl jot \
            -am \
            -DskipTests \
            "-Dnative.classifier=${{ matrix.platform }}" \
            -P release \
            -DperformRelease=true
        shell: bash

  publish-universal:
    name: Build & Deploy - universal
    runs-on: ubuntu-latest
    needs: publish-native
    env:
      MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD

      - name: Download all native artifacts
        uses: actions/download-artifact@v4
        with:
          path: native-artifacts

      - name: Organize native libs for universal JAR
        run: |
          mkdir -p jot/target/classes/lib
          find native-artifacts -type f \( -name "libjot_sr25519.*" -o -name "jot_sr25519.dll" \) -exec cp {} jot/target/classes/lib/ \;

      - name: Deploy universal jar + parent POM
        run: mvn deploy -pl jot -am -DskipTests -P release -DperformRelease=true
