name: Release SDK

on:
  workflow_dispatch:

jobs:
  publish-native:
    name: Build & Deploy - ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux-x86_64
            runner: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
          - platform: linux-aarch64
            runner: ubuntu-latest
            rust-target: aarch64-unknown-linux-gnu
          - platform: macos-x86_64
            runner: macos-latest
            rust-target: x86_64-apple-darwin
          - platform: macos-aarch64
            runner: macos-latest
            rust-target: aarch64-apple-darwin
          - platform: windows-x86_64
            runner: windows-latest
            rust-target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Install Linux deps
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

      - name: Build & deploy SDK + parent POM
        run: mvn clean deploy -pl jot -am -DskipTests -Dnative.classifier=${{ matrix.platform }} -P release -DperformRelease=true

  publish-universal:
    name: Build & Deploy - universal
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
          server-id: ossrh
          server-username: ${{ secrets.OSSRH_USERNAME }}
          server-password: ${{ secrets.OSSRH_PASSWORD }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: |
            x86_64-unknown-linux-gnu
            aarch64-unknown-linux-gnu
            x86_64-apple-darwin
            aarch64-apple-darwin
            x86_64-pc-windows-msvc

      - name: Install Linux deps
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

      - name: Build all native variants
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu --manifest-path src/jot_sr25519/Cargo.toml
          cargo build --release --target aarch64-unknown-linux-gnu --manifest-path src/jot_sr25519/Cargo.toml
          cargo build --release --target x86_64-apple-darwin --manifest-path src/jot_sr25519/Cargo.toml
          cargo build --release --target aarch64-apple-darwin --manifest-path src/jot_sr25519/Cargo.toml
          cargo build --release --target x86_64-pc-windows-msvc --manifest-path src/jot_sr25519/Cargo.toml

      - name: Copy all native libs into universal jar
        run: |
          mkdir -p jot/target/classes/lib
          find target -type f \( -name "libjot_sr25519.*" -o -name "jot_sr25519.dll" \) -exec cp {} jot/target/classes/lib/ \;

      - name: Deploy universal jar + parent POM
        run: mvn clean deploy -pl jot -am -DskipTests -P release -DperformRelease=true
