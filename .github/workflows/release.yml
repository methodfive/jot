name: Release SDK

on:
  workflow_dispatch:

jobs:
  publish-native:
    name: Build & Deploy - ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - platform: linux-x86_64
            runner: ubuntu-latest
            rust-target: x86_64-unknown-linux-gnu
            native-filename: libjot_sr25519-linux-x86_64.so
          - platform: macos-x86_64
            runner: macos-13
            rust-target: x86_64-apple-darwin
            native-filename: libjot_sr25519-macos-x86_64.dylib
          - platform: macos-aarch64
            runner: macos-latest
            rust-target: aarch64-apple-darwin
            native-filename: libjot_sr25519-macos-aarch64.dylib
          - platform: windows-x86_64
            runner: windows-latest
            rust-target: x86_64-pc-windows-msvc
            native-filename: jot_sr25519-windows-x86_64.dll

    env:
      MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          server-id: central
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust-target }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Deploy platform-specific native JAR
        run: |
          mvn clean deploy \
            -pl jot \
            -am \
            -DskipTests \
            "-Dnative.classifier=${{ matrix.platform }}" \
            -P release \
            -DperformRelease=true
        shell: bash

      - name: Upload native lib
        uses: actions/upload-artifact@v4
        with:
          name: native-lib-${{ matrix.platform }}
          path: jot/target/classes/lib/${{ matrix.native-filename }}

  publish-universal:
    name: Build & Deploy - universal
    runs-on: ubuntu-latest
    needs: publish-native
    env:
      MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          server-id: central
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD

      - name: Download native artifacts (linux-x86_64)
        uses: actions/download-artifact@v4
        with:
          name: native-lib-linux-x86_64
          path: native-artifacts/linux-x86_64

      - name: Download native artifacts (macos-x86_64)
        uses: actions/download-artifact@v4
        with:
          name: native-lib-macos-x86_64
          path: native-artifacts/macos-x86_64

      - name: Download native artifacts (macos-aarch64)
        uses: actions/download-artifact@v4
        with:
          name: native-lib-macos-aarch64
          path: native-artifacts/macos-aarch64

      - name: Download native artifacts (windows-x86_64)
        uses: actions/download-artifact@v4
        with:
          name: native-lib-windows-x86_64
          path: native-artifacts/windows-x86_64

      - name: Debug artifact structure
        run: |
          echo "::group::Directory tree of downloaded artifacts"
          find native-artifacts || echo "Artifacts not found!"
          echo "::endgroup::"

      - name: Organize native libs for universal JAR
        run: |
          mkdir -p jot/target/classes/lib

          cp native-artifacts/linux-x86_64/libjot_sr25519-linux-x86_64.so \
             jot/target/classes/lib/libjot_sr25519-linux-x86_64.so

          cp native-artifacts/macos-x86_64/libjot_sr25519-macos-x86_64.dylib \
             jot/target/classes/lib/libjot_sr25519-macos-x86_64.dylib

          cp native-artifacts/macos-aarch64/libjot_sr25519-macos-aarch64.dylib \
             jot/target/classes/lib/libjot_sr25519-macos-aarch64.dylib

          cp native-artifacts/windows-x86_64/jot_sr25519-windows-x86_64.dll \
             jot/target/classes/lib/jot_sr25519-windows-x86_64.dll

      - name: Deploy universal jar + parent POM
        run: mvn deploy -pl jot -am -DskipTests -P release -DperformRelease=true
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
